(()=>{"use strict";function e(e,t,n){this.tittle=e,this.description=t,this.dueDate=n}function t(e){const n=document.querySelector(".taskArea");let l=1;n.textContent="",o[e].forEach((c=>{if(c.tittle){const s=document.createElement("div");s.classList.add("task"),s.id=l;const d=document.createElement("p");d.textContent=c.tittle+"  "+c.description+"  "+c.dueDate;const i=document.createElement("button");i.classList.add("removeTaskBtn"),i.textContent="X",i.id=l,console.log(i),s.appendChild(d),s.appendChild(i),n.appendChild(s),l++,i.addEventListener("click",(()=>{const n=i.getAttribute("id");console.log(n),o[e].splice(n,1),t(e)}))}}))}const n=document.querySelector(".projects");let o=[];function l(){n.textContent="";let e=0;o.forEach((c=>{console.log(c);const s=document.createElement("div"),d=document.createElement("button"),i=document.createElement("p"),r=document.querySelector(".submitBtn"),a=document.querySelector(".addTaskBtn"),u=document.querySelector(".taskArea");s.classList.add("projectDiv"),s.id=e,i.classList.add("projectPara"),i.textContent=c[0],i.id=e,d.classList.add("removeBtn"),d.id=e,d.textContent="X",s.appendChild(i),s.appendChild(d),console.log(s),n.appendChild(s),i.addEventListener("click",(()=>{let e=document.querySelectorAll(".projectPara");console.log(e+"paras here"),e.forEach((e=>{e.classList.remove("active")})),i.classList.add("active"),console.log(i);let n=i.getAttribute("id");console.log(n),r.id=n,console.log(r),t(n),a.style.display="inline"})),d.addEventListener("click",(()=>{let e=d.getAttribute("id"),t=i.getAttribute("id");console.log(e),console.log(t),o.splice(e,1),r.id=t,a.style.display="none",u.innerHTML="SELECT A PROJECT <br>IF THERE IS NO PROJECT PLEASE CREATE ONE",l()})),e++}))}const c=document.querySelector(".addTaskBtn"),s=document.querySelector(".form"),d=document.querySelector(".submitBtn"),i=document.querySelector(".addProjectBtn"),r=document.querySelector(".submitProjectBtn"),a=document.querySelector(".cancelProjectBtn"),u=document.querySelector(".projectForm");console.log(c),c.addEventListener("click",(()=>{s.style.display="flex",c.style.display="none",s.reset()})),d.addEventListener("click",(n=>{const l=document.querySelector(".submitBtn");let d=document.querySelector("#title").value,i=document.querySelector("#description").value,r=document.querySelector("#dueDate").value,a=l.id;console.log(a),function(t,n,l,c){let s=new e(t,n,l);console.log("in add new task "+s),console.log(o[c]),o[c].push(s),console.log(o[c])}(d,i,r,a),t(a),console.log("It works fine now theres problem in addTask"),s.style.display="none",c.style.display="inline",s.reset(),n.preventDefault()})),i.addEventListener("click",(()=>{u.style.display="flex",i.style.display="none",u.reset()})),r.addEventListener("click",(e=>{let t=document.querySelector("#projectName").value;var n;console.log(t),n=t,o.push([n]),console.log(o),l(),u.style.display="none",i.style.display="inline",e.preventDefault(),u.reset()})),a.addEventListener("click",(e=>{u.style.display="none",i.style.display="inline",u.reset(),e.preventDefault()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,